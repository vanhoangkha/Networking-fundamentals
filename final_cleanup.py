#!/usr/bin/env python3
"""
Script d·ªçn d·∫πp cu·ªëi c√πng ƒë·ªÉ s·ª≠a c√°c v·∫•n ƒë·ªÅ format
"""

import os
import re
import glob

def clean_file(file_path):
    """D·ªçn d·∫πp format file"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        
        # S·ª≠a c√°c v·∫•n ƒë·ªÅ format
        lines = content.split('\n')
        cleaned_lines = []
        
        for line in lines:
            # Lo·∫°i b·ªè heading tr√πng l·∫∑p v√† sai format
            if re.match(r'^## \d+\.\d+ # \d+\.\d+', line):
                # L·∫•y ph·∫ßn sau d·∫•u # cu·ªëi c√πng
                parts = line.split('# ')
                if len(parts) > 1:
                    line = '## ' + parts[-1]
            
            # S·ª≠a heading b·ªã l·ªói
            line = re.sub(r'^## \d+\.\d+ (.+)', r'## \1', line)
            line = re.sub(r'^# (\d+\.\d+\.\d+) (.+)', r'### \1 \2', line)
            
            # S·ª≠a c√°c v·∫•n ƒë·ªÅ kh√°c
            line = re.sub(r'\*\*(.+?): \*\*', r'**\1:**', line)  # S·ª≠a bold v·ªõi d·∫•u hai ch·∫•m
            line = re.sub(r' - to - ', ' - ', line)  # S·ª≠a d·∫•u g·∫°ch ngang
            line = re.sub(r'\((.+?)\) \(\1\)', r'(\1)', line)  # Lo·∫°i b·ªè l·∫∑p trong ngo·∫∑c
            
            cleaned_lines.append(line)
        
        # Lo·∫°i b·ªè d√≤ng tr·ªëng th·ª´a
        final_lines = []
        prev_empty = False
        
        for line in cleaned_lines:
            if line.strip() == '':
                if not prev_empty:
                    final_lines.append(line)
                prev_empty = True
            else:
                final_lines.append(line)
                prev_empty = False
        
        content = '\n'.join(final_lines)
        
        # L∆∞u file n·∫øu c√≥ thay ƒë·ªïi
        if content != original_content:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
            return True
        
        return False
        
    except Exception as e:
        print(f"L·ªói khi x·ª≠ l√Ω {file_path}: {e}")
        return False

def main():
    base_dir = "/home/ubuntu/NEO/Networking fundamentals"
    pattern = os.path.join(base_dir, "Day*.md")
    files = glob.glob(pattern)
    
    print("üßπ D·ªåNG D·∫∏P CU·ªêI C√ôNG")
    print("=" * 30)
    
    fixed_count = 0
    for file_path in sorted(files):
        filename = os.path.basename(file_path)
        if clean_file(file_path):
            print(f"‚úÖ {filename}")
            fixed_count += 1
        else:
            print(f"‚ö™ {filename}")
    
    print(f"\nüéâ Ho√†n th√†nh! ƒê√£ s·ª≠a {fixed_count}/{len(files)} file")

if __name__ == "__main__":
    main()
