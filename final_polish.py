#!/usr/bin/env python3
"""
Script tinh ch·ªânh cu·ªëi c√πng cho t√†i li·ªáu CCNA
S·ª≠a c√°c v·∫•n ƒë·ªÅ c√≤n l·∫°i v√† ho√†n thi·ªán ƒë·ªãnh d·∫°ng
"""

import os
import re
import glob
from pathlib import Path

def fix_file_formatting(file_path):
    """S·ª≠a c√°c v·∫•n ƒë·ªÅ ƒë·ªãnh d·∫°ng c√≤n l·∫°i"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # Lo·∫°i b·ªè header tr√πng l·∫∑p
        lines = content.split('\n')
        cleaned_lines = []
        header_found = False
        
        for line in lines:
            # B·ªè qua header tr√πng l·∫∑p
            if line.startswith('# NG√ÄY') and header_found:
                continue
            elif line.startswith('# NG√ÄY') and not header_found:
                header_found = True
                cleaned_lines.append(line)
            elif line.startswith('# ') and any(x in line for x in ['1.', '2.', '3.', '4.', '5.', '6.', '7.', '8.', '9.']):
                # B·ªè qua header c≈© v·ªõi s·ªë
                continue
            else:
                cleaned_lines.append(line)
        
        # S·ª≠a c√°c v·∫•n ƒë·ªÅ ƒë·ªãnh d·∫°ng kh√°c
        content = '\n'.join(cleaned_lines)
        
        # S·ª≠a bullet points
        content = re.sub(r'^‚Ä¢--', '**ƒê·∫∑c ƒëi·ªÉm:**', content, flags=re.MULTILINE)
        content = re.sub(r'^‚Ä¢', '-', content, flags=re.MULTILINE)
        
        # S·ª≠a HTTPS th√†nh https trong links
        content = content.replace('HTTPS://github.com', 'https://github.com')
        
        # C·∫£i thi·ªán formatting cho b·∫£ng
        content = re.sub(r'\|\s*---\s*\|', '|-------|', content)
        
        # Ghi l·∫°i file
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(content)
            
        return True
        
    except Exception as e:
        print(f"L·ªói khi x·ª≠ l√Ω {file_path}: {e}")
        return False

def main():
    base_dir = "/home/ubuntu/NEO/Networking fundamentals"
    pattern = os.path.join(base_dir, "Day*.md")
    files = glob.glob(pattern)
    
    print("üîß ƒêang tinh ch·ªânh cu·ªëi c√πng...")
    
    success_count = 0
    for file_path in sorted(files):
        filename = os.path.basename(file_path)
        if fix_file_formatting(file_path):
            success_count += 1
            print(f"‚úÖ {filename}")
        else:
            print(f"‚ùå {filename}")
    
    print(f"\nüéâ Ho√†n th√†nh! ƒê√£ tinh ch·ªânh {success_count}/{len(files)} file")

if __name__ == "__main__":
    main()
